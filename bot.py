import asyncio
import nest_asyncio
from telegram import Update
from telegram import Bot
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext, ContextTypes
import discord
from dotenv import load
import os


nest_asyncio.apply()

# === –¢–æ–∫–µ–Ω—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ ===
load()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
DISCORD_CHANNEL_ID = int(os.getenv("DISCORD_CHANNEL_ID"))
TELEGRAM_CHAT_ID = int(os.getenv("TELEGRAM_CHAT_ID"))
TELEGRAM_TOPIC_ID = int(os.getenv("TELEGRAM_TOPIC_ID"))

# === Telegram ===
telegram_app = Application.builder().token(TELEGRAM_TOKEN).build()
telegram_bot = Bot(token=TELEGRAM_TOKEN)

# –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
async def get_voice_members():
    report = ""
    for guild in discord_bot.guilds:
        for channel in guild.voice_channels:
            if len(channel.members) > 0:
                report += f"üéß *{channel.name}* ({guild.name}):\n"
                for member in channel.members:
                    report += f"  - {member.display_name}\n"
    return report or "–ù–∏–∫–æ–≥–æ –Ω–µ—Ç –≤ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö."

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ Telegram-–∫–æ–º–∞–Ω–¥—ã /–≥–æ–ª–æ—Å
async def voice_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    report = await get_voice_members()
    await update.message.reply_text(report, parse_mode="Markdown")

# Telegram: –∫–æ–º–∞–Ω–¥–∞ /start
async def tg_start(update: Update, context: CallbackContext):
    #await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç –∏–∑ Telegram!")
    chat = update.effective_chat
    await update.message.reply_text(f"Chat ID: {chat.id}")

# Telegram: –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ Discord
async def tg_forward(update: Update, context: CallbackContext):
    text = update.message.text
    user = update.message.from_user.full_name

    # –û—Ç–≤–µ—á–∞–µ–º –≤ Telegram
    await update.message.reply_text(f"–ü–µ—Ä–µ—Å—ã–ª–∞—é –≤ Discord: {text}")

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –≤ Discord
    if discord_bot.is_ready():
        channel = discord_bot.get_channel(DISCORD_CHANNEL_ID)
        if channel:
            await channel.send(f"–°–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ Telegram –æ—Ç **{user}**:\n{text}")

telegram_app.add_handler(CommandHandler("start", tg_start))
telegram_app.add_handler(CommandHandler("voice", voice_command))
telegram_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, tg_forward))

# === Discord ===
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.voice_states = True


discord_bot = discord.Client(intents=intents)

@discord_bot.event
async def on_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message.author == discord_bot.user:
        return

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –∏ —Ç–µ–∫—Å—Ç
    author_name = message.author.display_name
    content_text = f"*{author_name}* –≤ Discord:\n{message.content or 'üì∑'}"

    # –ï—Å–ª–∏ –µ—Å—Ç—å –≤–ª–æ–∂–µ–Ω–∏—è (attachments)
    if message.attachments:
        for attachment in message.attachments:
            # –ü—Ä–æ–≤–µ—Ä–∏–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
            if attachment.content_type and attachment.content_type.startswith("image/"):
                # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é
                await telegram_bot.send_photo(
                    chat_id=TELEGRAM_CHAT_ID,
                    photo=attachment.url,
                    caption=content_text,
                    parse_mode="Markdown",
                    message_thread_id=TELEGRAM_TOPIC_ID
                )
                return  # –û—Ç–ø—Ä–∞–≤–∏–ª–∏ ‚Äî –≤—ã—Ö–æ–¥–∏–º
            else:
                # –î—Ä—É–≥–æ–π —Ç–∏–ø —Ñ–∞–π–ª–∞ ‚Äî –æ—Ç–ø—Ä–∞–≤–∏–º –∫–∞–∫ —Å—Å—ã–ª–∫—É
                await telegram_bot.send_message(
                    chat_id=TELEGRAM_CHAT_ID,
                    text=f"{content_text}\n\nüìé –í–ª–æ–∂–µ–Ω–∏–µ: {attachment.url}",
                    parse_mode="Markdown",
                    message_thread_id=TELEGRAM_TOPIC_ID
                )
                return

    # –ï—Å–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if message.content:
        await telegram_bot.send_message(
            chat_id=TELEGRAM_CHAT_ID,
            text=content_text,
            parse_mode="Markdown",
            message_thread_id=TELEGRAM_TOPIC_ID
        )

@discord_bot.event
async def on_ready():
    print(f"[Discord] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {discord_bot.user}")
    for guild in discord_bot.guilds:
        print(f"üõ°Ô∏è –°–µ—Ä–≤–µ—Ä: {guild.name}")
        for channel in guild.text_channels:
            print(f"  üì∫ –ö–∞–Ω–∞–ª: {channel.name} (ID: {channel.id})")

# === –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è ===
async def main():
    print("–ó–∞–ø—É—Å–∫ Telegram –∏ Discord –±–æ—Ç–æ–≤...")

    await telegram_app.initialize()
    await telegram_app.start()
    await telegram_app.updater.start_polling()

    await discord_bot.start(DISCORD_TOKEN)

# === –ó–∞–ø—É—Å–∫ ===
if __name__ == "__main__":
    asyncio.get_event_loop().run_until_complete(main())
