import discord
from discord.ext import commands
import random
import re


class DiscordBot:
    def __init__(self, token: str):
        self.token = token

        intents = discord.Intents.default()
        intents.message_content = True
        intents.members = True
        intents.voice_states = True

        self.bot = commands.Bot(command_prefix="!", intents=intents)
        self.slash_command_responses = {}

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ –∫–æ–º–∞–Ω–¥—ã
        self.setup_events()
        self.setup_commands()

    def setup_events(self):
        @self.bot.event
        async def on_ready():
            print(f"[Discord] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {self.bot.user}")
            for guild in self.bot.guilds:
                print(f"üõ°Ô∏è –°–µ—Ä–≤–µ—Ä: {guild.name}")
                for channel in guild.text_channels:
                    print(f"  üì∫ –ö–∞–Ω–∞–ª: {channel.name} (ID: {channel.id})")

        @self.bot.event
        async def on_connect():
            try:
                synced = await self.bot.tree.sync()
                print(f"Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {len(synced)} —à—Ç.")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ sync: {e}")

    def setup_commands(self):
        # === SLASH –∫–æ–º–∞–Ω–¥—ã ===
        @self.bot.tree.command(name="dice", description="–ö–∏–Ω—É—Ç—å –∫—É–±–∏–∫ —Å –∑–∞–¥–∞–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –≥—Ä–∞–Ω–µ–π")
        async def dice(interaction: discord.Interaction, sides: str = "6"):
            match = re.search(r'(\d+)', sides)
            arg = int(match.group(1)) if match else 6

            if arg < 2:
                await interaction.response.send_message(
                    "‚ùå –ö—É–±–∏–∫ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –º–∏–Ω–∏–º—É–º 2 –≥—Ä–∞–Ω–∏!", ephemeral=False
                )
                return

            number = random.randint(1, arg)
            await interaction.response.send_message(f"üé≤ –í—ã–ø–∞–ª–æ: {number} (–∏–∑ {arg})")
            message = await interaction.original_response()
            self.track_slash_response(interaction.channel.id, message)

        @self.bot.tree.command(name="choose", description="–í—ã–±–æ—Ä –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.")
        async def choose(interaction: discord.Interaction, choices: str):
            options = choices.split()
            number = random.randint(0, len(options) - 1)
            await interaction.response.send_message(
                f"‚úÖ –ü–æ–±–µ–∂–¥–∞–µ—Ç {options[number]}! ({choices})"
            )
            message = await interaction.original_response()
            self.track_slash_response(interaction.channel.id, message)

        # === PREFIX –∫–æ–º–∞–Ω–¥—ã ===
        @self.bot.command(name="purge")
        async def purge(ctx, n: int = 5):
            deleted = await ctx.channel.purge(
                limit=n, check=lambda message: message.author == self.bot.user
            )
            await ctx.send(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –±–æ—Ç–∞.", delete_after=5)

        @self.bot.command(name="purge_slash")
        async def clear_slash_replies(ctx, count: int = 1):
            channel_id = ctx.channel.id

            if channel_id not in self.slash_command_responses or not self.slash_command_responses[channel_id]:
                await ctx.send("‚ùå –ù–µ—Ç –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã –≤ —ç—Ç–æ–º –∫–∞–Ω–∞–ª–µ.", delete_after=5)
                await ctx.message.delete(delay=5)
                return

            deleted = 0
            for msg in self.slash_command_responses[channel_id][-count:]:
                try:
                    await msg.delete()
                    deleted += 1
                except discord.NotFound:
                    continue
                except discord.Forbidden:
                    await ctx.send("‚ö†Ô∏è –ù–µ—Ç –ø—Ä–∞–≤ —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è!", delete_after=5)
                    await ctx.message.delete(delay=5)
                    return

            self.slash_command_responses[channel_id] = self.slash_command_responses[channel_id][:-deleted]
            await ctx.send(f"‚úÖ –£–¥–∞–ª–µ–Ω–æ {deleted} –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã.", delete_after=5)
            await ctx.message.delete(delay=5)

    def track_slash_response(self, channel_id: int, message: discord.Message):
        """–ó–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è-–æ—Ç–≤–µ—Ç—ã –Ω–∞ slash-–∫–æ–º–∞–Ω–¥—ã"""
        if channel_id not in self.slash_command_responses:
            self.slash_command_responses[channel_id] = []
        self.slash_command_responses[channel_id].append(message)

    def run(self):
        self.bot.run(self.token)
